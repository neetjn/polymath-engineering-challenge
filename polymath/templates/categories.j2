<!DOCTYPE HTML>
<html>
  <head>
    <title>Categories - {{ category.category_name }}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.6.2/css/bulma.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulmaswatch/0.6.1/lumen/bulmaswatch.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/riot/3.8.1/riot+compiler.min.js"></script>
  </head>
  <body>
    <App />

    <script type="riot/tag">
      <App>
        <section class="hero is-fullheight is-info">
          <div class="hero-head">
            <nav class="navbar animated fadeInDown">
              <div class="container">
                <div class="navbar-brand">
                  <a class="navbar-item">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/EBay_logo.svg/300px-EBay_logo.svg.png" alt="Logo" />
                  </a>
                </div>
                <div id="navbarMenuHeroB" class="navbar-menu">
                  <div class="navbar-end">
                    <a href="https://github.com/neet_jn" class="navbar-item">
                      Github&nbsp;<i class="fa fa-github"></i>
                    </a>
                    <a href="https://www.linkedin.com/in/john-nolette-69ba72132/" class="navbar-item">
                      LinkedIn&nbsp;<i class="fa fa-linkedin"></i>
                    </a>
                  </div>
                </div>
              </div>
            </nav>
          </div>

          <div class="hero-body">
            <div class="container has-text-centered">
              <p class="title">
                { parent_category.categoryName }
              </p>
              <p class="subtitle">
                Last Updated: <small>{ new Date(parent_category.lastUpdated*1000).toLocaleString() }</small>
              </p>

              <article if={ error } class="message is-danger animated zoomIn">
                <div class="message-header">
                  <p>Error</p>
                </div>
                <div class="message-body">
                  An error has occurred attempting to process your requests.
                </div>
              </article>

              <nav class="breadcrumb" aria-label="breadcrumbs">
                <ul>
                  <li>
                    <a href="#" click={ navigate }><i class="fa fa-home"></i></a>
                  </li>
                  <li each={ category in category_tree }>
                    <a href="#" category={ category } click={ navigate }>{ category.categoryName }</a>
                  </li>
                </ul>
              </nav>

              <div class="container">
                <div class="columns is-multiline animated fadeInRight">
                  <div class="column is-4" each={ child in parent_category.children }>
                    <Category parent_category={ parent_category }
                              category={ child } />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <Footer />
        </section>

        <style>
          .breadcrumb {
            padding: 1rem;
            background-color: #FFDD57;
            color: #665822;
          }
          .message.is-danger {
            max-width: 35em;
            margin-left: auto;
            margin-right: auto;
          }
        </style>

        const self = this

        self.error = false
        self.parent_category = self.root_category
        self.category_tree = []

        self.on('category.push', category => {
          self.category_tree.push(category)
          self.parent_category = category
          self.update()
        })

        navigate(e) {
          if (e.item && e.item.category) {
            self.category_tree.splice(self.category_tree.findIndex(c => c.categoryId == e.item.category.categoryId) + 1)
            self.parent_category = e.item.category
          } else {
            self.category_tree = []
            self.parent_category = self.root_category
          }
        }
      </App>
    </script>

    <script type="riot/tag">
      <Category>
        <article class="tile is-child notification is-danger">
          <p class="title is-4">{ category.categoryName }</p>
          <p class="title is-6">{ category.categoryId }</p>
          <hr />
          <p class="subtitle">
            <span class="tag is-{ category.bestOffersEnabled ? 'success' : 'danger' }">Best Offers</span>
          </p>
          <button class="button is-primary"
                  click={ pushCategory }
                  disabled={ !category.children.length }>
            View&nbsp;<i class="fa fa-chevron-circle-right"></i>
          </button>
          <button class="button is-success"
                  click={ viewModal }>
            Info&nbsp;<i class="fa fa-info-circle"></i>
          </button>
          <CategoryModal category={ category } view={ modalView } />
        </article>

        this.category = this.opts.category
        this.modalView = { active: false }

        pushCategory(e) {
          this.parent.trigger('category.push', this.category)
        }

        viewModal(e) {
          this.modalView.active = true
        }
      </Category>
    </script>

    <script type="riot/tag">
      <CategoryModal>
        <div class="modal { view.active ? 'is-active' : '' } animated fadeIn">
          <div class="modal-background"></div>
          <div ref="modal" class="modal-card">
            <header class="modal-card-head">
              <p class="modal-card-title">{ category.categoryName }</p>
              <button class="delete" click={ hideModal }></button>
            </header>
            <section class="modal-card-body">
              <p><strong>Last Updated</strong>: { new Date(category.lastUpdated*1000).toLocaleString() }</p>
              <p><strong>Child Categories</strong>: { category.children.length }</p>
              <p><strong>Best Offers Enabled</strong>: { category.bestOffersEnabled ? 'true' : 'false' }</p>
              <p><strong>Expired</strong>: false</p>
            </section>
          </div>
        </div>

        <style>
          .modal-card * {
            color: #000;
          }
        </style>

        const self = this

        self.category = self.opts.category
        self.view = self.opts.view
        self.waitForView = false

        setInterval(function() {
          if (!self.view.active && !self.waitForView)
            self.waitForView = true
          if (self.waitForView && self.view.active) {
            self.waitForView = false
            self.refs.modal.scrollIntoView({
              behavior: 'smooth',
              block: 'center'
            })
          }
        }, 250)

        hideModal(e) {
          self.view.active = false
        }
      </CategoryModal>
    </script>

    <script type="riot/tag">
      <Footer class="footer">
        <div class="container">
          <div class="content has-text-centered">
            <h1 class="title">
              <small><i class="fa fa-cog"></i>&nbsp;Powered by <a href="https://riotjs.com"></small><img id="riot" title="Riot.js" src="http://riotjs.com/img/logo/riot240x.png" /></a>
            </h1>
            <p>
              The source code is licensed <a href="http://opensource.org/licenses/mit-license.php">MIT</a>.
              <br />
              The website content is licensed <a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY NC SA 4.0</a>.
              <br />
              App by <a href="https://github.com/neetjn">John Nolette</a>.
            </p>
          </div>
        </div>

        <style>
          footer.footer {
            border-top: 3px solid #FF291D;
            background-color: #FF4136;
          }
          #riot {
            display: inline-block;
            width: 1.5em;
          }
        </style>
      </Footer>
    </script>

    <script>
      riot.mixin({ 'root_category': {{ data }} })
      riot.mount('app')
    </script>
  </body>
</html>
